@inject SignInManager<User> SignInManager

@inject UserManager<User> UserManager
@{

    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
    var user = await UserManager.GetUserAsync(User);
    bool IsAdmin = user.RoleISAdmin;
}
<ul class="nav nav-pills nav-stacked">
    <li class="@ManageNavPages.IndexNavClass(ViewContext)"><a asp-page="./Index">Profile</a></li>
    <li class="@ManageNavPages.ChangePasswordNavClass(ViewContext)"><a id="change-password" asp-page="./ChangePassword">Password</a></li>
    @if (hasExternalLogins)
    {
        <li class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)"><a id="external-login" asp-page="./ExternalLogins">External logins</a></li>
    }
    <li class="@ManageNavPages.PersonalInstructionsNavClass(ViewContext)"><a asp-page="./PersonalInstructions">Instructions</a></li>
    @if (IsAdmin)
    {
        <li class="@ManageNavPages.AdminMenuNavClass(ViewContext)"><a asp-page="./AdminMenu">AdminMenu</a></li>
    }
</ul>
