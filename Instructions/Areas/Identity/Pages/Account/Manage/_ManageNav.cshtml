@inject SignInManager<User> SignInManager
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
    var user = await UserManager.GetUserAsync(User);
}
<ul class="nav nav-pills nav-stacked">
    <li class="@ManageNavPages.IndexNavClass(ViewContext)"><a asp-page="./Index">@Localizer["Profile"]</a></li>
    <li class="@ManageNavPages.ChangePasswordNavClass(ViewContext)"><a id="change-password" asp-page="./ChangePassword">@Localizer["Password"]</a></li>
    <li class="@ManageNavPages.PersonalInstructionsNavClass(ViewContext)"><a asp-page="./PersonalInstructions">@Localizer["Instructions"]</a></li>
    @if (user.RoleISAdmin)
    {
        <li class="@ManageNavPages.AdminMenuNavClass(ViewContext)"><a asp-page="./AdminMenu">@Localizer["Admin menu"]</a></li>
    }
</ul>
